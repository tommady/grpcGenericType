// Code generated by protoc-gen-go.
// source: protobuf.proto
// DO NOT EDIT!

/*
Package helloGeneric is a generated protocol buffer package.

It is generated from these files:
	protobuf.proto

It has these top-level messages:
	Request
	Reply
*/
package helloGeneric

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/struct"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Arg *google_protobuf.Value `protobuf:"bytes,1,opt,name=arg" json:"arg,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetArg() *google_protobuf.Value {
	if m != nil {
		return m.Arg
	}
	return nil
}

type Reply struct {
	Ret *google_protobuf.Value `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Reply) GetRet() *google_protobuf.Value {
	if m != nil {
		return m.Ret
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "helloGeneric.Request")
	proto.RegisterType((*Reply)(nil), "helloGeneric.Reply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for GenericDo service

type GenericDoClient interface {
	DoSomething(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type genericDoClient struct {
	cc *grpc.ClientConn
}

func NewGenericDoClient(cc *grpc.ClientConn) GenericDoClient {
	return &genericDoClient{cc}
}

func (c *genericDoClient) DoSomething(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/helloGeneric.GenericDo/DoSomething", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GenericDo service

type GenericDoServer interface {
	DoSomething(context.Context, *Request) (*Reply, error)
}

func RegisterGenericDoServer(s *grpc.Server, srv GenericDoServer) {
	s.RegisterService(&_GenericDo_serviceDesc, srv)
}

func _GenericDo_DoSomething_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenericDoServer).DoSomething(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloGeneric.GenericDo/DoSomething",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenericDoServer).DoSomething(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _GenericDo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloGeneric.GenericDo",
	HandlerType: (*GenericDoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoSomething",
			Handler:    _GenericDo_DoSomething_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("protobuf.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x03, 0x33, 0x84, 0x78, 0x32, 0x52, 0x73, 0x72, 0xf2, 0xdd, 0x53,
	0xf3, 0x52, 0x8b, 0x32, 0x93, 0xa5, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x61, 0x8a,
	0xf4, 0x8b, 0x4b, 0x8a, 0x4a, 0x93, 0x4b, 0x20, 0x6a, 0x95, 0x8c, 0xb9, 0xd8, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x34, 0xb8, 0x98, 0x13, 0x8b, 0xd2, 0x25, 0x18, 0x15, 0x18, 0x35,
	0xb8, 0x8d, 0xc4, 0xf4, 0x20, 0xda, 0xf4, 0xe0, 0x66, 0x87, 0x25, 0xe6, 0x94, 0xa6, 0x06, 0x81,
	0x94, 0x28, 0x19, 0x72, 0xb1, 0x06, 0xa5, 0x16, 0xe4, 0x54, 0x82, 0xb4, 0x14, 0xa5, 0x96, 0x10,
	0xd2, 0x02, 0x54, 0x62, 0xe4, 0xc1, 0xc5, 0x09, 0x75, 0x90, 0x4b, 0xbe, 0x90, 0x35, 0x17, 0xb7,
	0x4b, 0x7e, 0x70, 0x7e, 0x6e, 0x6a, 0x49, 0x46, 0x66, 0x5e, 0xba, 0x90, 0xa8, 0x1e, 0xb2, 0x83,
	0xf5, 0xa0, 0xee, 0x91, 0x12, 0x46, 0x17, 0x06, 0xda, 0xa8, 0xc4, 0x90, 0xc4, 0x06, 0x36, 0xde,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x23, 0x0f, 0xf7, 0x53, 0xf6, 0x00, 0x00, 0x00,
}
